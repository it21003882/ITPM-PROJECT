const express = require('express');
const router = express.Router();
const location=require('../models/map');
const mongoose = require("mongoose");


//Set up Google Maps API client


// Add a location
router.post('/locations', (req, res) => {
  const { name , address } = req.body;
  googleMapsClient.geocode({
    params: {
      
      address: address,
      key: 'AIzaSyDddNXTHG6JZM3tQqYku4GG027xDSclxrI', // Replace with your Google Maps API key
    },
    timeout: 1000, // milliseconds
  })
    .then((response) => {
      const { lat, lng } = response.data.results[0].geometry.location;
      const newLocation = new location({
        name:name,
        address:address,
        latitude:lat,
        longitude:lng,
      })
      newLocation.save((error) => {
        if(error) {
          console.error(error);
          res.status(500).json({ success: false, message: 'Failed to add location' });
        }  else {
          res.status(201).json({ success: true, message: 'Location added successfully' });
        }

      });
 
    })


    .catch((error) => {
      console.error(error);
      res.status(500).json({ success: false, message: 'Failed to add location' });
    });
});

// Delete a location
router.delete('/locations/:id', (req, res) => {
  const locationId = req.params.id;
  // Delete the location from your database or perform any other actions
  location.findByIdAndRemove(locationId).exec((err,deletedLocation) => {

    if(err){
      return res.status(404).json({
        success:false,
        message:"Deleted unsucessfull",err
      });
    }else{
      res.status(201).json({
        message:"Deleted successfully",deletedLocation
      });
    }
  })
  
 
});

/*
// Search for locations
app.get('/locations', (req, res) => {
  const { query } = req.query;
  googleMapsClient.placesAutoComplete({
    params: {
      input: query,
      key: 'YOUR_API_KEY', // Replace with your Google Maps API key
    },
    timeout: 1000, // milliseconds
  })
    .then((response) => {
      const predictions = response.data.predictions;
      res.json({ success: true, predictions });
    })
    .catch((error) => {
      console.error(error);
      res.status(500).json({ success: false, message: 'Failed to search for locations' });
    });
});
*/


/*
const location = new Location({
    name: 'My Location',
    location: {
      type: 'Point',
      coordinates: [longitude, latitude]
    }
  });*/
  
  /*
  location.save((err) => {
    if (err) {
      console.error(err);
    } else {
      console.log('Location saved successfully!');
    }
  });
  
  router.post("/save",(req, res, next) => {
    console.log(req.file);
    
    const location = new Location({
      
      name: 'My Location',
      location: {
        type: 'Point',
        coordinates: [parseFloat(req.body.longitude),parseFloat(req.body.latitude)]
      }

    });
    location
      .save()
      .then(result => {
        console.log(result);
        res.status(201).json({
          message: "Created geo location successfully",
          geoLocation:result
        })

      })

      .catch(err => {
        console.log(err);
        res.status(500).json({
          error: err
        });
      });
  });

  */





module.exports = router;